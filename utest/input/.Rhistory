highstart = 0, highplus = 0,
sex = "both",
histmod = "ac",
chrom = "",
opacity = 0.5,
label = ""){
lineWidth = 0.25
binSize = 200
theEnd = nrow(datafem)
end = start + plus
if (end < start) end = start + 1000
if (end > theEnd) end = theEnd
myTitle = paste0(chrom, ":", format(start * binSize, scientific = FALSE, big.mark = ","), "-", format(end * binSize, scientific = FALSE, big.mark = ","))
print(myTitle)
datafempart = datafem[start:end,]
datamalpart = datamal[start:end,]
myPlot <- ggplot2::ggplot(ggplot2::aes(x = as.numeric(row.names(datafempart)) * binSize, y = 0), data = datafempart) + ggplot2::geom_line() + ggplot2::ylim(0, 1) + ggplot2::scale_fill_manual(values = c("males, H3K27ac" = "#0000ff", "females, H3K27ac" = "#ff0000",  "females, H3K4me1" = "purple", "males, H3K2me1" = "forest green"))
myPlot <- myPlot + ggplot2::labs(title = myTitle) + ggplot2::xlab("bins in ChromHMM (1 bin = 200b)") + ggplot2::ylab("probability of histone modification")
myPlot <- myPlot + ggplot2::theme(panel.background = ggplot2::element_rect(fill="white", color = "grey50", size=2), panel.grid.major = ggplot2::element_line(color = "grey",size=(0.2)))
if (highstart > 0 & highplus > 0) {
myPlot <- myPlot + ggplot2::geom_rect(ggplot2::aes(xmin = highstart * binSize, xmax = (highstart + highplus) * binSize, ymin = 0, ymax = 1), fill = "#ffff00", alpha = 0.005)
}
if (histmod == "ac" | histmod == "both"){
if (sex == "fem" | sex == "both") myPlot <- myPlot + ggplot2::geom_density(ggplot2::aes(y = H3K27ac, fill = 'females, H3K27ac'), data = datafempart, size = lineWidth, stat = 'identity', alpha = opacity)
if (sex == "mal" | sex == "both") myPlot <- myPlot + ggplot2::geom_density(ggplot2::aes(y = H3K27ac, fill = 'males, H3K27ac'), data = datamalpart, size = lineWidth, stat = 'identity', alpha = opacity)
}
if (histmod == "me1" | histmod == "both"){
if (sex == "fem" | sex == "both") myPlot <- myPlot + ggplot2::geom_density(ggplot2::aes(y = H3K4me1, fill = 'females, H3K4me1'), data = datafempart, size = lineWidth, stat = 'identity', alpha = opacity)
if (sex == "mal" | sex == "both") myPlot <- myPlot + ggplot2::geom_density(ggplot2::aes(y = H3K4me1, fill = 'males, H3K2me1'), data = datamalpart, size = lineWidth, stat = 'identity', alpha = opacity)
}
if (nchar(label) > 0) {
myPlot <- myPlot + ggplot2::annotate("text", x = start * binSize, y = 0.9, label = label, family = "Ubuntu", size = 10, hjust = 0)
}
myPlot
}
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:153,800,000-154,000,000", plusminus = 1000, sex = "both", histmod = "both")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:153,800,000-154,000,000", plusminus = 1000, sex = "both", histmod = "bme1")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:153,800,000-154,000,000", plusminus = 1000, sex = "both", histmod = "me1")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:153,800,000-154,000,000", plusminus = 1000, sex = "both", histmod = "ac")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:130,800,000-131,000,000", plusminus = 1000, sex = "both", histmod = "ac", highlight = "chrX:130,822,807-130,964,890")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:130,800,000-131,000,000", plusminus = 1000, sex = "both", histmod = "me1", highlight = "chrX:130,822,807-130,964,890")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:130,000,000-131,000,000", plusminus = 1000, sex = "both", histmod = "ac", highlight = "chrX:73,040,484-73,072,558")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:73,000,000-73,100,000", plusminus = 1000, sex = "both", histmod = "ac", highlight = "chrX:73,040,484-73,072,558")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:73,000,000-73,100,000", plusminus = 1000, sex = "both", histmod = "me1", highlight = "chrX:73,040,484-73,072,558")
densitypile = function(datafem, datamal,
start = 0, plus = 1000,
highstart = 0, highplus = 0,
sex = "both",
histmod = "ac",
chrom = "",
opacity = 0.5,
label = ""){
lineWidth = 0.25
binSize = 200
theEnd = nrow(datafem)
end = start + plus
if (end < start) end = start + 1000
if (end > theEnd) end = theEnd
myTitle = paste0(chrom, ":", format(start * binSize, scientific = FALSE, big.mark = ","), "-", format(end * binSize, scientific = FALSE, big.mark = ","))
print(myTitle)
datafempart = datafem[start:end,]
datamalpart = datamal[start:end,]
myPlot <- ggplot2::ggplot(ggplot2::aes(x = as.numeric(row.names(datafempart)) * binSize, y = 0), data = datafempart) + ggplot2::geom_line() + ggplot2::ylim(0, 1) + ggplot2::scale_fill_manual(values = c("males, H3K27ac" = "#0000ff", "females, H3K27ac" = "#ff0000",  "females, H3K4me1" = "purple", "males, H3K2me1" = "forest green"))
myPlot <- myPlot + ggplot2::labs(title = myTitle) + ggplot2::xlab("bins in ChromHMM (1 bin = 200b)") + ggplot2::ylab("probability of histone modification")
myPlot <- myPlot + ggplot2::theme(panel.background = ggplot2::element_rect(fill="white", color = "grey50", size=2), panel.grid.major = ggplot2::element_line(color = "grey",size=(0.2)))
if (highstart > 0 & highplus > 0) {
myPlot <- myPlot + ggplot2::geom_rect(ggplot2::aes(xmin = highstart * binSize, xmax = (highstart + highplus) * binSize, ymin = 0, ymax = 1), fill = "#ffff00", alpha = 0.005)
}
if (histmod == "ac" | histmod == "H3K27ac" | histmod == "both"){
if (sex == "fem" | sex == "both") myPlot <- myPlot + ggplot2::geom_density(ggplot2::aes(y = H3K27ac, fill = 'females, H3K27ac'), data = datafempart, size = lineWidth, stat = 'identity', alpha = opacity)
if (sex == "mal" | sex == "both") myPlot <- myPlot + ggplot2::geom_density(ggplot2::aes(y = H3K27ac, fill = 'males, H3K27ac'), data = datamalpart, size = lineWidth, stat = 'identity', alpha = opacity)
}
if (histmod == "me1" | histmod == "me" | histmod == "H3K4me1" | histmod == "both"){
if (sex == "fem" | sex == "both") myPlot <- myPlot + ggplot2::geom_density(ggplot2::aes(y = H3K4me1, fill = 'females, H3K4me1'), data = datafempart, size = lineWidth, stat = 'identity', alpha = opacity)
if (sex == "mal" | sex == "both") myPlot <- myPlot + ggplot2::geom_density(ggplot2::aes(y = H3K4me1, fill = 'males, H3K2me1'), data = datamalpart, size = lineWidth, stat = 'identity', alpha = opacity)
}
if (nchar(label) > 0) {
myPlot <- myPlot + ggplot2::annotate("text", x = start * binSize, y = 0.9, label = label, family = "Ubuntu", size = 10, hjust = 0)
}
myPlot
}
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:73,000,000-73,100,000", plusminus = 1000, sex = "both", histmod = "me1", highlight = "chrX:73,040,484-73,072,558")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:73,000,000-73,100,000", plusminus = 1000, sex = "both", histmod = "H3K27ac", highlight = "chrX:73,040,484-73,072,558")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:73,000,000-73,100,000", plusminus = 1000, sex = "both", histmod = "both", highlight = "chrX:73,040,484-73,072,558")
drawpilegb(pilefem_mono_chrX, pilemal_mono_chrX, coord = "chrX:73,000,000-73,100,000", plusminus = 1000, sex = "both", histmod = "me1", highlight = "chrX:73,040,484-73,072,558")
source("C:/DATA/GitHub/chromatinsight.tools/R/tools.R")
setwd("C:/DATA/GitHub/Chromatinsight/utest/input")
# pimal = pileup(prefix = "monocyte_S*mal", chrom = "chrX")
# pifem = pileup(prefix = "monocyte_S*fem", chrom = "chrX")
getmatrix = function(direc = "", pattern = "*", start = 1, end = -1, histmod = "H3K27ac", windowsize = 200){
if (tolower(histmod) == "ac") histmod = "H3K27ac"
if (tolower(histmod) == "me" | tolower(histmod) == "me1") histmod = "H3K4me1"
myDirec = direc
if (nchar(myDirec) > 0) {
if (substr(myDirec, nchar(myDirec), nchar(myDirec)) != "/") {
myDirec = paste0(myDirec, "/")
}
}
myFilePath = paste0(myDirec, pattern) # the pattern of the *_binary.txt files
print(myFilePath)
myFiles = Sys.glob(myFilePath)
print(paste0("Checking ", length(myFiles), " files."))
myMatrix = data.frame()
total = 0
for (myFile in myFiles){
print(paste0("Loading: ", myFile))
myTable = read.table(myFile, sep = "\t", header = TRUE, skip = 1)
if (end == -1) thisEnd = nrow(myTable)
else thisEnd = end
myRow = t(myTable[start:thisEnd, histmod])
rownames(myRow) = myFile
colnames(myRow) = (start:thisEnd) * windowsize
myMatrix = rbind(myMatrix, myRow)
}
return(myMatrix)
}
mym = getmatrix(pattern = "mono*", start = 365340, end = 365380)
heatmap(data.matrix(mym), Colv = NA)
heatmap(data.matrix(mym), Colv = NA, scale = "none")
(45:55)
(45:55)*3000
format((45:55)*3000, big.mark = ",")
format((45:55)*3000, big.mark = "/")
paste0("chrX:", format((45:55)*3000, big.mark = ","))
getmatrix = function(direc = "", pattern = "*", start = 1, end = -1, histmod = "H3K27ac", windowsize = 200){
if (tolower(histmod) == "ac") histmod = "H3K27ac"
if (tolower(histmod) == "me" | tolower(histmod) == "me1") histmod = "H3K4me1"
myDirec = direc
if (nchar(myDirec) > 0) {
if (substr(myDirec, nchar(myDirec), nchar(myDirec)) != "/") {
myDirec = paste0(myDirec, "/")
}
}
myFilePath = paste0(myDirec, pattern) # the pattern of the *_binary.txt files
print(myFilePath)
myFiles = Sys.glob(myFilePath)
print(paste0("Checking ", length(myFiles), " files."))
myMatrix = data.frame()
total = 0
for (myFile in myFiles){
print(paste0("Loading: ", myFile))
myTable = read.table(myFile, sep = "\t", header = TRUE, skip = 1)
if (end == -1) thisEnd = nrow(myTable)
else thisEnd = end
myRow = t(myTable[start:thisEnd, histmod])
rownames(myRow) = myFile
colnames(myRow) = paste0(myChrom' ":", format((start:thisEnd) * windowsize, big.mark = ","))
myMatrix = rbind(myMatrix, myRow)
}
return(myMatrix)
}
mym = getmatrix(pattern = "mono*", start = 365340, end = 365380)
heatmap(data.matrix(mym), Colv = NA, scale = "none")
getmatrix = function(direc = "", pattern = "*", start = 1, end = -1, histmod = "H3K27ac", windowsize = 200, chromosome = ""){
if (tolower(histmod) == "ac") histmod = "H3K27ac"
if (tolower(histmod) == "me" | tolower(histmod) == "me1") histmod = "H3K4me1"
myDirec = direc
if (nchar(myDirec) > 0) {
if (substr(myDirec, nchar(myDirec), nchar(myDirec)) != "/") {
myDirec = paste0(myDirec, "/")
}
}
myFilePath = paste0(myDirec, pattern) # the pattern of the *_binary.txt files
print(myFilePath)
myFiles = Sys.glob(myFilePath)
print(paste0("Checking ", length(myFiles), " files."))
myMatrix = data.frame()
total = 0
for (myFile in myFiles){
print(paste0("Loading: ", myFile))
myTable = read.table(myFile, sep = "\t", header = TRUE, skip = 1)
if (end == -1) thisEnd = nrow(myTable)
else thisEnd = end
myRow = t(myTable[start:thisEnd, histmod])
rownames(myRow) = myFile
columnNames = format((start:thisEnd) * windowsize, big.mark = ",")
if (chromosome != "") columnNames = paste0(chromosome, ":", columnNames)
colnames = columnNames
myMatrix = rbind(myMatrix, myRow)
}
return(myMatrix)
}
mym = getmatrix(pattern = "mono*", start = 365340, end = 365380)
heatmap(data.matrix(mym), Colv = NA, scale = "none")
getmatrix = function(direc = "", pattern = "*", start = 1, end = -1, histmod = "H3K27ac", windowsize = 200, chromosome = ""){
if (tolower(histmod) == "ac") histmod = "H3K27ac"
if (tolower(histmod) == "me" | tolower(histmod) == "me1") histmod = "H3K4me1"
myDirec = direc
if (nchar(myDirec) > 0) {
if (substr(myDirec, nchar(myDirec), nchar(myDirec)) != "/") {
myDirec = paste0(myDirec, "/")
}
}
myFilePath = paste0(myDirec, pattern) # the pattern of the *_binary.txt files
print(myFilePath)
myFiles = Sys.glob(myFilePath)
print(paste0("Checking ", length(myFiles), " files."))
myMatrix = data.frame()
total = 0
for (myFile in myFiles){
print(paste0("Loading: ", myFile))
myTable = read.table(myFile, sep = "\t", header = TRUE, skip = 1)
if (end == -1) thisEnd = nrow(myTable)
else thisEnd = end
myRow = t(myTable[start:thisEnd, histmod])
rownames(myRow) = myFile
columnNames = format((start:thisEnd) * windowsize, big.mark = ",")
if (chromosome != "") columnNames = paste0(chromosome, ":", columnNames)
colnames(myRow) = columnNames
myMatrix = rbind(myMatrix, myRow)
}
return(myMatrix)
}
mym = getmatrix(pattern = "mono*", start = 365340, end = 365380)
heatmap(data.matrix(mym), Colv = NA, scale = "none")
mym = getmatrix(pattern = "mono*", start = 365340, end = 365380, chromosome = "chrX")
heatmap(data.matrix(mym), Colv = NA, scale = "none")
hcl.colors(10)
hcl.colors(1)
hcl.colors(2)
mym = getmatrix(pattern = "mono*", start = 365340, end = 365380, chromosome = "chrX")
heatmap(data.matrix(mym), Colv = NA, scale = "none", hcl.colors(2))
heatmap(data.matrix(mym), Colv = NA, scale = "none", hcl.colors(2))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = hcl.colors(2))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = hcl.colors(2))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = hcl.colors(3))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = hcl.colors(1))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = hcl.colors(2))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#ff0000", "#8080ff"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#ff0000", "#0000ff"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#ff4040", "#0000ff"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#ff4040", "#4040ff"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#101010", "#4040ff"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0f0f0", "#4040ff"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0f0f0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none")
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0f0f0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#00f0f0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0f000", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0f040", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0f0e0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0f0a0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0a0a0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0e0a0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0d0a0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#ffd0a0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#ffe0a0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#ff8080"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none")
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
splitCoords("chrX:101,300-500,393")
splitCoords("chrX:101,300-500,393")[2]
splitCoords("chrX:101,300-500,393")["start"]
splitCoords("chrX:101,300-500,393")["end"]
splitCoords("chrX:101,300-500,393")["end"] / 200
as.numeric(splitCoords("chrX:101,300-500,393")["end"]) / 200
floor(as.numeric(splitCoords("chrX:101,300-500,393")["end"]) / 200)
ceiling(as.numeric(splitCoords("chrX:101,300-500,393")["end"]) / 200)
getmatrix = function(direc = "", pattern = "*", coord = "", start = 1, end = -1, histmod = "H3K27ac", windowsize = 200, chromosome = ""){
if (tolower(histmod) == "ac") histmod = "H3K27ac"
if (tolower(histmod) == "me" | tolower(histmod) == "me1") histmod = "H3K4me1"
# note that coord overrides start, end and chromosome
if (coord != "") {
myCoord = splitCoords(coord)
start = floor(myCoord$start / windowsize)
end = ceiling(myCoord$end / windowsize)
chromosome = myCoord$chrom
myDirec = direc
if (nchar(myDirec) > 0) {
if (substr(myDirec, nchar(myDirec), nchar(myDirec)) != "/") {
myDirec = paste0(myDirec, "/")
}
}
myFilePath = paste0(myDirec, pattern) # the pattern of the *_binary.txt files
print(myFilePath)
myFiles = Sys.glob(myFilePath)
print(paste0("Checking ", length(myFiles), " files."))
myMatrix = data.frame()
total = 0
for (myFile in myFiles){
print(paste0("Loading: ", myFile))
myTable = read.table(myFile, sep = "\t", header = TRUE, skip = 1)
if (end == -1) thisEnd = nrow(myTable)
else thisEnd = end
myRow = t(myTable[start:thisEnd, histmod])
rownames(myRow) = myFile
columnNames = format((start:thisEnd) * windowsize, big.mark = ",")
if (chromosome != "") columnNames = paste0(chromosome, ":", columnNames)
colnames(myRow) = columnNames
myMatrix = rbind(myMatrix, myRow)
}
return(myMatrix)
}
mym = getmatrix(pattern = "mono*", coord = "chrX:73,040,484-73,072,558")
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0f0f0", "#ff4040"))
getmatrix = function(direc = "", pattern = "*", coord = "", start = 1, end = -1, histmod = "H3K27ac", windowsize = 200, chromosome = ""){
if (tolower(histmod) == "ac") histmod = "H3K27ac"
if (tolower(histmod) == "me" | tolower(histmod) == "me1") histmod = "H3K4me1"
# note that coord overrides start, end and chromosome
if (coord != "") {
myCoord = splitCoords(coord)
start = floor(myCoord$start / windowsize)
end = ceiling(myCoord$end / windowsize)
chromosome = myCoord$chrom
}
myDirec = direc
if (nchar(myDirec) > 0) {
if (substr(myDirec, nchar(myDirec), nchar(myDirec)) != "/") {
myDirec = paste0(myDirec, "/")
}
}
myFilePath = paste0(myDirec, pattern) # the pattern of the *_binary.txt files
print(myFilePath)
myFiles = Sys.glob(myFilePath)
print(paste0("Checking ", length(myFiles), " files."))
myMatrix = data.frame()
total = 0
for (myFile in myFiles){
print(paste0("Loading: ", myFile))
myTable = read.table(myFile, sep = "\t", header = TRUE, skip = 1)
if (end == -1) thisEnd = nrow(myTable)
else thisEnd = end
myRow = t(myTable[start:thisEnd, histmod])
rownames(myRow) = myFile
columnNames = format((start:thisEnd) * windowsize, big.mark = ",")
if (chromosome != "") columnNames = paste0(chromosome, ":", columnNames)
colnames(myRow) = columnNames
myMatrix = rbind(myMatrix, myRow)
}
return(myMatrix)
}
mym = getmatrix(pattern = "mono*", coord = "chrX:73,040,484-73,072,558")
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#f0f0f0", "#ff4040"))
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
myFirre = getmatrix(pattern = "mono*", coord = "chrX:130,822,807-130,964,890")
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
myFirre = getmatrix(pattern = "mono*", coord = "chrX:130,822,807-130,964,890")
heatmap(data.matrix(myFirre), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
heatmap(data.matrix(myFirre), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
max(myFirre)
min(myFirre)
unique(myFirre)
goodNumbers = (min(myFirre) == 0 & max(myFirre) == 1)
goodNumbers
png("C:/Users/nmt106/Dropbox/labejo/taskoj/2021/2021-10-20 make heatmap function for genomic regions/Firre_reduced.png")
dev.off()
heatmap(data.matrix(myFirre), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
dev.off()
png("C:/Users/nmt106/Dropbox/labejo/taskoj/2021/2021-10-20 make heatmap function for genomic regions/Firre_reduced.png")
heatmap(data.matrix(myFirre), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
dev.off()
?png
png("C:/Users/nmt106/Dropbox/labejo/taskoj/2021/2021-10-20 make heatmap function for genomic regions/Firre_reduced.png", width = 1800, height = 1000)
heatmap(data.matrix(myFirre), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
dev.off()
getheatmap = function(pattern = "*", coord = "", histmod = "H3K27ac", windowsize = 200, filename = "", direc = "") {
myFirre = getmatrix(direc = direc, pattern = pattern, histmod = histmod, coord = coord, windowsize = windowsize)
if (filename != "") {
png(filename, width = 1800, height = 1000)
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
dev.off()
}
else heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
}
getmatrix = function(direc = "", pattern = "*", coord = "", start = 1, end = -1, histmod = "H3K27ac", windowsize = 200, chromosome = ""){
if (tolower(histmod) == "ac") histmod = "H3K27ac"
if (tolower(histmod) == "me" | tolower(histmod) == "me1") histmod = "H3K4me1"
# note that coord overrides start, end and chromosome
if (coord != "") {
myCoord = splitCoords(coord)
start = floor(myCoord$start / windowsize)
end = ceiling(myCoord$end / windowsize)
chromosome = myCoord$chrom
}
myDirec = direc
if (nchar(myDirec) > 0) {
if (substr(myDirec, nchar(myDirec), nchar(myDirec)) != "/") {
myDirec = paste0(myDirec, "/")
}
}
myFilePath = paste0(myDirec, pattern) # the pattern of the *_binary.txt files
print(myFilePath)
myFiles = Sys.glob(myFilePath)
print(paste0("Checking ", length(myFiles), " files."))
myMatrix = data.frame()
total = 0
for (myFile in myFiles){
print(paste0("Loading: ", myFile))
myTable = read.table(myFile, sep = "\t", header = TRUE, skip = 1)
if (end == -1) thisEnd = nrow(myTable)
else thisEnd = end
myRow = t(myTable[start:thisEnd, histmod])
rownames(myRow) = myFile
columnNames = format((start:thisEnd) * windowsize, big.mark = ",")
if (chromosome != "") columnNames = paste0(chromosome, ":", columnNames)
colnames(myRow) = columnNames
goodNumbers = (min(myRow) == 0 & max(myRow) == 1)
if (goodNumbers) myMatrix = rbind(myMatrix, myRow)
else print(paste0("Worning: File ", myFile, " excluded.")
}
return(myMatrix)
}
# myXist = getmatrix(pattern = "mono*", coord = "chrX:73,040,484-73,072,558")
# myFirre = getmatrix(pattern = "mono*", coord = "chrX:130,822,807-130,964,890")
# heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
getheatmap = function(pattern = "*", coord = "", histmod = "H3K27ac", windowsize = 200, filename = "", direc = "") {
myFirre = getmatrix(direc = direc, pattern = pattern, histmod = histmod, coord = coord, windowsize = windowsize)
if (filename != "") {
png(filename, width = 1800, height = 1000)
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
dev.off()
}
else heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
}
getmatrix = function(direc = "", pattern = "*", coord = "", start = 1, end = -1, histmod = "H3K27ac", windowsize = 200, chromosome = ""){
if (tolower(histmod) == "ac") histmod = "H3K27ac"
if (tolower(histmod) == "me" | tolower(histmod) == "me1") histmod = "H3K4me1"
# note that coord overrides start, end and chromosome
if (coord != "") {
myCoord = splitCoords(coord)
start = floor(myCoord$start / windowsize)
end = ceiling(myCoord$end / windowsize)
chromosome = myCoord$chrom
}
myDirec = direc
if (nchar(myDirec) > 0) {
if (substr(myDirec, nchar(myDirec), nchar(myDirec)) != "/") {
myDirec = paste0(myDirec, "/")
}
}
myFilePath = paste0(myDirec, pattern) # the pattern of the *_binary.txt files
print(myFilePath)
myFiles = Sys.glob(myFilePath)
print(paste0("Checking ", length(myFiles), " files."))
myMatrix = data.frame()
total = 0
for (myFile in myFiles){
print(paste0("Loading: ", myFile))
myTable = read.table(myFile, sep = "\t", header = TRUE, skip = 1)
if (end == -1) thisEnd = nrow(myTable)
else thisEnd = end
myRow = t(myTable[start:thisEnd, histmod])
rownames(myRow) = myFile
columnNames = format((start:thisEnd) * windowsize, big.mark = ",")
if (chromosome != "") columnNames = paste0(chromosome, ":", columnNames)
colnames(myRow) = columnNames
goodNumbers = (min(myRow) == 0 & max(myRow) == 1)
if (goodNumbers) myMatrix = rbind(myMatrix, myRow)
else print(paste0("Worning: File ", myFile, " excluded."))
}
return(myMatrix)
}
getheatmap(pattern = "mono*", coord = "chrX:73,040,484-73,072,558", filename = "C:/Users/nmt106/Dropbox/labejo/taskoj/2021/2021-10-20 make heatmap function for genomic regions/Xist_reduced.png"")
getheatmap(pattern = "mono*", coord = "chrX:73,040,484-73,072,558", filename = "C:/Users/nmt106/Dropbox/labejo/taskoj/2021/2021-10-20 make heatmap function for genomic regions/Xist_reduced.png")
dev.list()
while (!is.null(dev.list()))  dev.off()
dev.new()
dev.list()
graphics.off()
dev.list()
getheatmap = function(pattern = "*", coord = "", histmod = "H3K27ac", windowsize = 200, filename = "", direc = "") {
myFirre = getmatrix(direc = direc, pattern = pattern, histmod = histmod, coord = coord, windowsize = windowsize)
if (filename != "") {
dev.new()
png(filename, width = 1800, height = 1000)
heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
graphics.off()
}
else heatmap(data.matrix(mym), Colv = NA, scale = "none", col = c("#fff0c0", "#a04040"))
}
getmatrix = function(direc = "", pattern = "*", coord = "", start = 1, end = -1, histmod = "H3K27ac", windowsize = 200, chromosome = ""){
if (tolower(histmod) == "ac") histmod = "H3K27ac"
if (tolower(histmod) == "me" | tolower(histmod) == "me1") histmod = "H3K4me1"
# note that coord overrides start, end and chromosome
if (coord != "") {
myCoord = splitCoords(coord)
start = floor(myCoord$start / windowsize)
end = ceiling(myCoord$end / windowsize)
chromosome = myCoord$chrom
}
myDirec = direc
if (nchar(myDirec) > 0) {
if (substr(myDirec, nchar(myDirec), nchar(myDirec)) != "/") {
myDirec = paste0(myDirec, "/")
}
}
myFilePath = paste0(myDirec, pattern) # the pattern of the *_binary.txt files
print(myFilePath)
myFiles = Sys.glob(myFilePath)
print(paste0("Checking ", length(myFiles), " files."))
myMatrix = data.frame()
total = 0
for (myFile in myFiles){
print(paste0("Loading: ", myFile))
myTable = read.table(myFile, sep = "\t", header = TRUE, skip = 1)
if (end == -1) thisEnd = nrow(myTable)
else thisEnd = end
myRow = t(myTable[start:thisEnd, histmod])
rownames(myRow) = myFile
columnNames = format((start:thisEnd) * windowsize, big.mark = ",")
if (chromosome != "") columnNames = paste0(chromosome, ":", columnNames)
colnames(myRow) = columnNames
goodNumbers = (min(myRow) == 0 & max(myRow) == 1)
if (goodNumbers) myMatrix = rbind(myMatrix, myRow)
else print(paste0("Worning: File ", myFile, " excluded."))
}
return(myMatrix)
}
getheatmap(pattern = "mono*", coord = "chrX:73,040,484-73,072,558", filename = "C:/Users/nmt106/Dropbox/labejo/taskoj/2021/2021-10-20 make heatmap function for genomic regions/Xist_reduced.png")
getheatmap(pattern = "mono*", coord = "chrX:73,040,484-73,072,558", filename = "C:/Users/nmt106/Dropbox/labejo/taskoj/2021/2021-10-20 make heatmap function for genomic regions/Xist_reduced2.png")
